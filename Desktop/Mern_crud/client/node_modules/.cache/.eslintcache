[{"D:\\reactjs\\Mern_crud\\client\\src\\index.js":"1","D:\\reactjs\\Mern_crud\\client\\src\\App.js":"2","D:\\reactjs\\Mern_crud\\client\\src\\reportWebVitals.js":"3","D:\\reactjs\\Mern_crud\\client\\src\\pages\\Home\\Home.js":"4","D:\\reactjs\\Mern_crud\\client\\src\\pages\\Edit\\Edit.js":"5","D:\\reactjs\\Mern_crud\\client\\src\\pages\\Profile\\Profile.js":"6","D:\\reactjs\\Mern_crud\\client\\src\\pages\\Register\\Register.js":"7","D:\\reactjs\\Mern_crud\\client\\src\\components\\Headers\\Headers.js":"8","D:\\reactjs\\Mern_crud\\client\\src\\components\\Tables\\Tables.js":"9","D:\\reactjs\\Mern_crud\\client\\src\\components\\Spiner\\Spiner.js":"10","D:\\reactjs\\Mern_crud\\client\\src\\services\\Apis.js":"11","D:\\reactjs\\Mern_crud\\client\\src\\services\\ApiCall.js":"12","D:\\reactjs\\Mern_crud\\client\\src\\services\\helper.js":"13","D:\\reactjs\\Mern_crud\\client\\src\\components\\context\\ContextProvider.js":"14","D:\\reactjs\\Mern_crud\\client\\src\\components\\Pagination\\Paginations.js":"15"},{"size":476,"mtime":1673291802500,"results":"16","hashOfConfig":"17"},{"size":686,"mtime":1673186683766,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1673100835192,"results":"19","hashOfConfig":"17"},{"size":10298,"mtime":1679681175461,"results":"20","hashOfConfig":"17"},{"size":15199,"mtime":1679681175469,"results":"21","hashOfConfig":"17"},{"size":5692,"mtime":1679681175469,"results":"22","hashOfConfig":"17"},{"size":8395,"mtime":1679681175461,"results":"23","hashOfConfig":"17"},{"size":542,"mtime":1673116454703,"results":"24","hashOfConfig":"17"},{"size":5441,"mtime":1679252336292,"results":"25","hashOfConfig":"17"},{"size":353,"mtime":1673213207397,"results":"26","hashOfConfig":"17"},{"size":1322,"mtime":1679681175505,"results":"27","hashOfConfig":"17"},{"size":887,"mtime":1679681175509,"results":"28","hashOfConfig":"17"},{"size":99,"mtime":1673234818222,"results":"29","hashOfConfig":"17"},{"size":1320,"mtime":1676199108983,"results":"30","hashOfConfig":"17"},{"size":1900,"mtime":1676232066684,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"rmwirx",{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\reactjs\\Mern_crud\\client\\src\\index.js",[],[],"D:\\reactjs\\Mern_crud\\client\\src\\App.js",[],[],"D:\\reactjs\\Mern_crud\\client\\src\\reportWebVitals.js",[],[],"D:\\reactjs\\Mern_crud\\client\\src\\pages\\Home\\Home.js",["81","82"],[],"import React, { useContext, useEffect, useState } from 'react'\r\nimport \"./home.css\"\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\n//import Card from \"react-bootstrap/Card\"\r\n//import Row from \"react-bootstrap/Row\"\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\n//use Navigate hook \r\n//we can also use nevlink\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Tables from '../../components/Tables/Tables';\r\nimport Spiner from \"../../components/Spiner/Spiner\"\r\nimport { addData, dltdata } from '../../components/context/ContextProvider';\r\nimport { updateData } from '../../components/context/ContextProvider';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport { usergetfunc, deletefunc,exporttocsvfunc } from \"../../services/Apis\"\r\nimport { toast } from 'react-toastify';\r\nimport Paginations from '../../components/Pagination/Paginations';\r\nconst Home = () => {\r\n    const [userdata, setUserData] = useState([]);\r\n    const [showspin, setShowSpin] = useState(true);\r\n    //for redirect\r\n    const navigate = useNavigate();\r\n    const adduser = () => {\r\n        navigate(\"/register\")\r\n    }\r\n\r\n    const { useradd, setUseradd } = useContext(addData);\r\n    const { update, setUpdate } = useContext(updateData);\r\n    // const [deletedata, setDLtdata] = useContext(dltdata);\r\n    const { deletedata, setDLtdata } = useContext(dltdata);\r\n    const [search, setSearch] = useState(\"\");\r\n    const [gender, setGender] = useState(\"All\");\r\n    const [status, setStatus] = useState(\"All\");\r\n    const [sort, setSort] = useState(\"new\");\r\n    const [page,setPage]=useState(1);\r\n    const [pageCount,setPageCount]=useState(0);\r\n\r\n    //for user get userget\r\n     const userGet = async () => {\r\n        const response = await usergetfunc(search, gender, status, sort);\r\n        console.log(response);\r\n        if (response.status === 200) {\r\n            //add userdata for pagination because we change response there so \r\n            //response.data use bcoz get data\r\n            setUserData(response.data.usersdata)\r\n            setPageCount(response.data.Pagination.pageCount)\r\n        \r\n          // console.log(response.data.Pagination.pageCount);\r\n           \r\n        } else {\r\n            console.log(\"error for get user data\");\r\n        }\r\n    }\r\n     // pagination\r\n  // handle prev btn\r\n  const handlePrevious = ()=>{\r\n    setPage(()=>{\r\n      if(page === 1) return page;\r\n      return page - 1\r\n    })\r\n  }\r\n\r\n  // handle next btn\r\n  const handleNext = ()=>{\r\n    setPage(()=>{\r\n      if(page === pageCount) return page;\r\n      return page + 1\r\n    })\r\n  }\r\n    //user delete\r\n    const deleteUser = async (id) => {\r\n\r\n        console.log(id);\r\n        const response = await deletefunc(id);\r\n        if (response.status === 200) {\r\n            setDLtdata(response.data);\r\n            userGet();\r\n\r\n        } else {\r\n            toast.error(\"error\")\r\n        }\r\n    }\r\n     // export user\r\n  const exportuser = async()=>{\r\n    const response = await exporttocsvfunc();\r\n    if(response.status === 200){\r\n     window.open(response.data.downloadUrl,\"blank\")\r\n    }else{\r\n      toast.error(\"error !\")\r\n    }\r\n    }\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n\r\n            setDLtdata(false)\r\n        }, 1200)\r\n    });\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            userGet();\r\n\r\n            setShowSpin(false)\r\n        }, 500)\r\n        //when we type automaticallly change data according to search\r\n    }, [search, gender, status, sort]);\r\n    return (\r\n        <>\r\n            {\r\n                useradd ? <Alert variant=\"success\" onClose={() => setUseradd(\"\")} dismissible>{\r\n                    useradd.fname.toUpperCase()\r\n                }\r\n                    __Succesfully Add\r\n                </Alert>\r\n                    : \"\"\r\n            }\r\n            {\r\n                update ? <Alert variant=\"primary\" onClose={() => setUpdate(\"\")} dismissible>{update.fname.toUpperCase()} Succesfully Update</Alert> : \"\"\r\n            }\r\n            {\r\n                deletedata ? <Alert variant=\"danger\" onClose={() => setDLtdata(\"\")} dismissible>{deletedata.fname.toUpperCase()} Succesfully Deleted</Alert> : \"\"\r\n            }\r\n\r\n            <div className=\"container\">\r\n                <div className=\"main_div\">\r\n                    {/* Search add button */}\r\n                    <div className=\"search_add mt-4 d-flex justify-content-between\">\r\n                        <div className=\"search col-lg-4\">\r\n                            <Form className=\"d-flex\">\r\n                                <Form.Control\r\n\r\n                                    type=\"search\"\r\n                                    placeholder=\"Search\"\r\n                                    className=\"me-2\"\r\n                                    aria-label=\"Search\"\r\n                                    onChange={(e) => setSearch(e.target.value)}\r\n                                />\r\n                                <Button variant=\"success\" className='search_btn'>Search</Button>\r\n                            </Form>\r\n                        </div>\r\n                        <div className=\"add_btn\">\r\n\r\n                            <Button variant=\"primary\" onClick={adduser} className='search_btn'>  <i className=\"fa-solid fa-plus\"></i>&nbsp;Add User</Button>\r\n                        </div>\r\n                    </div>\r\n                    {/* export .gender,status */}\r\n                    <div className=\"filter_div mt-5 d-flex justify-content-between flex-wrap\">\r\n                        <div className=\"export_csv\">\r\n                            <Button className='export_btn' onClick={exportuser}>Export To Csv</Button>\r\n                        </div>\r\n                        <div className=\"filter_gender\">\r\n                            <div className=\"filter\"></div>\r\n                            <h3>Filter By Gender</h3>\r\n                            <div className=\"gernder d-flex justify-content-around\">\r\n                                <Form.Check\r\n                                    type={\"radio\"}\r\n                                    label={`All`}\r\n                                    name=\"gender\"\r\n                                    value={\"All\"}\r\n                                    onChange={(e) => setGender(e.target.value)}\r\n                                    defaultChecked\r\n                                />\r\n\r\n                                <Form.Check\r\n                                    type={\"radio\"}\r\n                                    label={`Male`}\r\n                                    name=\"gender\"\r\n                                    value={\"Male\"}\r\n                                    onChange={(e) => setGender(e.target.value)}\r\n\r\n\r\n                                />\r\n                                <Form.Check\r\n                                    type={\"radio\"}\r\n                                    label={`Female`}\r\n                                    name=\"gender\"\r\n                                    value={\"Female\"}\r\n                                    onChange={(e) => setGender(e.target.value)}\r\n\r\n\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        {/* Short by value */}\r\n                        <div className=\"filter_newols\">\r\n                            <h3>Short by Value</h3>\r\n                            <Dropdown className=\"text-center\">\r\n                                <Dropdown.Toggle className='dropdown_btn' id=\"dropdown-basic\">\r\n                                    <i className=\"fa-solid fa-sort\"></i>\r\n                                </Dropdown.Toggle>\r\n\r\n\r\n                                <Dropdown.Menu>\r\n                                    <Dropdown.Item onClick={() => setSort(\"new\")}>New</Dropdown.Item>\r\n                                    <Dropdown.Item onClick={() => setSort(\"old\")}>Old</Dropdown.Item>\r\n                                </Dropdown.Menu>\r\n                            </Dropdown>\r\n\r\n                        </div>\r\n                        {/* filter by status */}\r\n                        <div className=\"filter_status\">\r\n                            <div className=\"status\">\r\n                                <h3>Filter By status</h3>\r\n                                <div className=\"status_radio d-flex justify-content-around flex-wrap\">\r\n                                    <Form.Check\r\n                                        type={\"radio\"}\r\n                                        label={`All`}\r\n                                        name=\"status\"\r\n                                        value={\"All\"}\r\n                                        onChange={(e) => setStatus(e.target.value)}\r\n                                        defaultChecked\r\n                                    />\r\n\r\n                                    <Form.Check\r\n                                        type={\"radio\"}\r\n                                        label={`Active`}\r\n                                        name=\"status\"\r\n                                        value={\"Active\"}\r\n                                        onChange={(e) => setStatus(e.target.value)}\r\n                                    />\r\n                                    <Form.Check\r\n                                        type={\"radio\"}\r\n                                        label={`InActive`}\r\n                                        name=\"status\"\r\n                                        value={\"InActive\"}\r\n                                        onChange={(e) => setStatus(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                {\r\n                    showspin ? <Spiner /> : <Tables userdata={userdata}\r\n                        deleteUser={deleteUser}\r\n                        userGet={userGet} \r\n                        handlePrevious={handlePrevious}\r\n                        handleNext={handleNext}\r\n                        page={page}\r\n                        pageCount={pageCount}\r\n                        setPage={setPage}\r\n                        />\r\n                }\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","D:\\reactjs\\Mern_crud\\client\\src\\pages\\Edit\\Edit.js",["83","84"],[],"/*import React, { useEffect, useState } from 'react'\r\nimport \"./edit.css\"\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Card from \"react-bootstrap/Card\"\r\nimport Row from \"react-bootstrap/Row\"\r\nimport Select from 'react-select';\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Spiner from \"../../components/Spiner/Spiner\"\r\nimport { useParams } from 'react-router-dom';\r\nimport { editfunc, singleUsergetfunc } from \"../../services/Apis\"\r\nimport { BASE_URL } from '../../services/helper';\r\n\r\nconst Edit = () => {\r\n  //for get data\r\n  const [showspin, setShowSpin] = useState(true);\r\n  const [inputdata, setInputData] = useState({\r\n    fname: \"\",\r\n    lname: \"\",\r\n    email: \"\",\r\n    mobile: \"\",\r\n    gender: \"\",\r\n    location: \"\",\r\n  });\r\n\r\n  //console.log(inputdata);\r\n  //console.log(inputdata);\r\n  const [status, setStatus] = useState(\"Active\");\r\n\r\n  const [image, setImage] = useState(\"\");\r\n  const [preview, setPreview] = useState(\"\");\r\n  //for get image\r\n  const [imgdata,setImgdata] = useState(\"\");\r\n\r\n  //function set input value\r\n  const setInputValue = (e) => {\r\n    const { name, value } = e.target;\r\n    setInputData({ ...inputdata, [name]: value });\r\n  }\r\n  const setStatusValue = (e) => {\r\n    setStatus(e.value);\r\n    // console.log(e);\r\n  }\r\n \r\n   // profile set\r\n   const setProfile = (e) => {\r\n    //setImage(e.target.files[0])\r\n    setImage(e.target.files[0]);\r\n  }\r\n\r\n  const { id } = useParams();\r\n  console.log(id);\r\n\r\n  const userProfileGet = async () => {\r\n    const response = await singleUsergetfunc(id);\r\n    // console.log(response);\r\n    if (response.status === 200) {\r\n      setInputData(response.data)\r\n      setStatus(response.data.status)\r\n      setProfile(response.data.user_profile)\r\n\r\n    } else {\r\n      console.log(\"error\");\r\n    }\r\n  }\r\n\r\n  //submit user data\r\n  const submitUserData = async(e) => {\r\n    //submit onclick ma aapdu page load no leee\r\n    e.preventDefault();\r\n    const { fname, lname, email, mobile, gender, location } = inputdata;\r\n    if (fname === \"\") {\r\n      toast.error(\"First name is Required !\")\r\n    } else if (lname === \"\") {\r\n      toast.error(\"Last name is Required !\")\r\n    } else if (email === \"\") {\r\n      toast.error(\"Email is Required !\")\r\n    } else if (!email.includes(\"@\")) {\r\n      toast.error(\"Enter Valid Email !\")\r\n    } else if (mobile === \"\") {\r\n      toast.error(\"Mobile is Required !\")\r\n    } else if (mobile.length > 10) {\r\n      toast.error(\"Enter Valid Mobile!f\")\r\n    } else if (gender === \"\") {\r\n      toast.error(\"Gender is Required !\")\r\n    } else if (location === \"\") {\r\n      toast.error(\"location is Required !\")\r\n    } else {\r\n    \r\n      const data=new FormData();\r\n      data.append(\"fname\",fname);\r\n      data.append(\"lname\",lname);\r\n      data.append(\"email\",email);\r\n      data.append(\"mobile\",mobile);\r\n      data.append(\"gender\",gender);\r\n      //useState\r\n      data.append(\"status\",status);\r\n      //useState\r\n      data.append(\"user_profile\",image ||imgdata);\r\n      data.append(\"location\",location);\r\n      \r\n      const config={\r\n          \"Config-Typer\":\"multipart/form-data\"\r\n      }\r\n      const response=await editfunc(id,data,config);\r\n      console.log(response);\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    userProfileGet()\r\n  }, [id]);\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    if (image) {\r\n      setImgdata(\"\")\r\n\r\n      setPreview(URL.createObjectURL(image))\r\n    }\r\n    setTimeout(() => {\r\n      setShowSpin(false)\r\n    }, 500)\r\n  }, [image]);\r\n\r\n  const options = [\r\n    { value: 'Active', label: 'Active' },\r\n    { value: 'InActive', label: 'InActive' }\r\n  ];\r\n\r\n  return (\r\n\r\n    <div>\r\n      <>\r\n        {\r\n          showspin ? <Spiner /> :\r\n            <div className=\"container\">\r\n              <h2 className='text-center mt-1'>Update Your Details</h2>\r\n              <Card className='shadow mt-3 p-3'>\r\n               \r\n\r\n                <Form>\r\n                  <Row>\r\n                    <Form.Group className=\"mb-3 col-lg-6\" controlId=\"formBasicEmail\">\r\n                      <Form.Label>First Name</Form.Label>\r\n                      <Form.Control type=\"text\" name=\"fname\" value={inputdata.fname} onChange={setInputValue} placeholder=\"Enter First Name\" />\r\n\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3 col-lg-6\" controlId=\"formBasicEmail\">\r\n                      <Form.Label>Last Name</Form.Label>\r\n                      <Form.Control type=\"text\" name='lname' value={inputdata.lname} onChange={setInputValue} placeholder='Enter Last Name' />\r\n\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3 col-lg-6\" controlId=\"formBasicEmail\">\r\n                      <Form.Label>Email address</Form.Label>\r\n                      <Form.Control type=\"email\" name=\"email\" value={inputdata.email} onChange={setInputValue} placeholder='Enter Email Address' />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3 col-lg-6\" controlId=\"formBasicEmail\">\r\n                      <Form.Label>Mobile</Form.Label>\r\n                      <Form.Control type=\"text\" name=\"mobile\" value={inputdata.mobile} onChange={setInputValue} placeholder='Enter Your Mobile Number' />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3 col-lg-6\" controlId=\"formBasicEmail\">\r\n                      <Form.Label>Select Your Gender</Form.Label>\r\n                      <Form.Check\r\n                        type={\"radio\"}\r\n                        label={`Male`}\r\n                        name=\"gender\"\r\n                        value={\"Male\"}\r\n                        checked={inputdata.gender===\"Male\"?true:false}\r\n                        onChange={setInputValue}\r\n                      />\r\n                      <Form.Check\r\n                        type={\"radio\"}\r\n                        label={`Female`}\r\n                        name=\"gender\"\r\n                        value={\"Female\"}\r\n                        checked={inputdata.gender===\"Female\"?true:false}\r\n                        onChange={setInputValue}\r\n        \r\n                      />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3 col-lg-6\" controlId=\"formBasicEmail\">\r\n                      <Form.Label>Yout Status</Form.Label>\r\n                      <Select\r\n                        defaultValue={status}\r\n                        options={options}\r\n                        checked={setStatusValue.status}\r\n                        onChange={setStatusValue} />\r\n                    </Form.Group>\r\n\r\n\r\n                    <Form.Group className=\"mb-3 col-lg-6\" controlId=\"formBasicEmail\">\r\n                      <Form.Label>Select Your Profile</Form.Label>\r\n                      <Form.Control type=\"file\" name=\"user_profile\" onChange={setProfile} placeholder='Select Your Profile' />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3 col-lg-6\" controlId=\"formBasicEmail\">\r\n                      <Form.Label>Enter Your Location</Form.Label>\r\n                      <Form.Control type=\"text\" name=\"location\" value={inputdata.location} onChange={setInputValue} placeholder='Enter Your Location' />\r\n                    </Form.Group>\r\n\r\n\r\n                    <Button variant=\"primary\" type=\"submit\" onClick={submitUserData}>\r\n                      Submit\r\n                    </Button>\r\n                  </Row>\r\n                </Form>\r\n              </Card>\r\n              <ToastContainer position=\"top-center\" />\r\n\r\n            </div>\r\n        }\r\n\r\n      </>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Edit\r\n*/\r\n\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport Card from \"react-bootstrap/Card\"\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Select from 'react-select';\r\nimport Spiner from \"../../components/Spiner/Spiner\"\r\nimport { singleUsergetfunc,editfunc } from '../../services/Apis';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { updateData } from '../../components/context/ContextProvider';\r\nimport { ToastContainer, toast } from \"react-toastify\"\r\nimport { BASE_URL } from '../../services/helper';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport \"./edit.css\"\r\n\r\nconst Edit = () => {\r\n\r\n  const [inputdata, setInputData] = useState({\r\n    fname: \"\",\r\n    lname: \"\",\r\n    email: \"\",\r\n    mobile: \"\",\r\n    gender: \"\",\r\n    location: \"\"\r\n  });\r\n\r\n\r\n  const [status, setStatus] = useState(\"Active\");\r\n  const [imgdata,setImgdata] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [preview, setPreview] = useState(\"\");\r\n\r\n  const {update,setUpdate} = useContext(updateData)\r\n\r\n const navigate = useNavigate();\r\n\r\n  const [showspin, setShowSpin] = useState(true);\r\n\r\n  const {id} = useParams();\r\n\r\n  // status optios\r\n  const options = [\r\n    { value: 'Active', label: 'Active' },\r\n    { value: 'InActive', label: 'InActive' },\r\n  ];\r\n\r\n  // setInput Value\r\n  const setInputValue = (e) => {\r\n    const { name, value } = e.target;\r\n    setInputData({ ...inputdata, [name]: value })\r\n  }\r\n\r\n  // status set\r\n  const setStatusValue = (e) => {\r\n    setStatus(e.value)\r\n  }\r\n\r\n  // profile set\r\n  const setProfile = (e) => {\r\n    setImage(e.target.files[0])\r\n\r\n  }\r\n  const userProfileGet = async()=>{\r\n    const response = await singleUsergetfunc(id);\r\n    \r\n    if(response.status === 200){\r\n      setInputData(response.data)\r\n      setStatus(response.data.status)\r\n      setImgdata(response.data.user_profile)\r\n    }else{\r\n      console.log(\"error\");\r\n    }\r\n  }\r\n  \r\n\r\n  //submit userdata\r\n  const submitUserData = async(e) => {\r\n    e.preventDefault();\r\n\r\n    const { fname, lname, email, mobile, gender, location } = inputdata;\r\n\r\n    if (fname === \"\") {\r\n      toast.error(\"First name is Required !\")\r\n    } else if (lname === \"\") {\r\n      toast.error(\"Last name is Required !\")\r\n    } else if (email === \"\") {\r\n      toast.error(\"Email is Required !\")\r\n    } else if (!email.includes(\"@\")) {\r\n      toast.error(\"Enter Valid Email !\")\r\n    } else if (mobile === \"\") {\r\n      toast.error(\"Mobile is Required !\")\r\n    } else if (mobile.length > 10) {\r\n      toast.error(\"Enter Valid Mobile!f\")\r\n    } else if (gender === \"\") {\r\n      toast.error(\"Gender is Required !\")\r\n    } else if (status === \"\") {\r\n      toast.error(\"Status is Required !\")\r\n    } else if (location === \"\") {\r\n      toast.error(\"location is Required !\")\r\n    } else {\r\n      \r\n      const data = new FormData();\r\n      data.append(\"fname\",fname)\r\n      data.append(\"lname\",lname)\r\n      data.append(\"email\",email)\r\n      data.append(\"mobile\",mobile)\r\n      data.append(\"gender\",gender)\r\n      data.append(\"status\",status)\r\n      //thats means new or old value send to backend \r\n      data.append(\"user_profile\",image || imgdata)\r\n      data.append(\"location\",location)\r\n\r\n      const config = {\r\n        \"Content-Type\":\"multipart/form-data\"\r\n      }\r\n\r\n      const response = await editfunc(id,data,config);\r\n        \r\n      if(response.status === 200){\r\n        //for alert in home page \r\n        setUpdate(response.data)\r\n        navigate(\"/\")\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(()=>{\r\n    //call func\r\n    userProfileGet();\r\n  },[id])\r\n\r\n  useEffect(() => {\r\n    if (image) {\r\n      setImgdata(\"\")\r\n      setPreview(URL.createObjectURL(image))\r\n    }\r\n    setTimeout(() => {\r\n      setShowSpin(false)\r\n    }, 1200)\r\n  }, [image]);\r\n  return (\r\n    <>\r\n      {\r\n        showspin ? <Spiner /> : <div className=\"container\">\r\n          <h2 className='text-center mt-1'>Update Your Details</h2>\r\n          <Card className='shadow mt-3 p-3'>\r\n            <div className=\"profile_div text-center\">\r\n              <img src={image ? preview : `${BASE_URL}/uploads/${imgdata}`} alt=\"img\" />\r\n      \r\n            </div>\r\n            <Form>\r\n              <Row>\r\n                <Form.Group className=\"mb-3 col-lg-6\" controlId=\"formBasicEmail\">\r\n                  <Form.Label>First name</Form.Label>\r\n                  <Form.Control type=\"text\" name='fname' value={inputdata.fname} onChange={setInputValue} placeholder='Enter FirstName' />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3 col-lg-6\" controlId=\"formBasicEmail\">\r\n                  <Form.Label>Last Name</Form.Label>\r\n                  <Form.Control type=\"text\" name='lname' value={inputdata.lname} onChange={setInputValue} placeholder='Enter LastName' />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3 col-lg-6\" controlId=\"formBasicEmail\">\r\n                  <Form.Label>Email address</Form.Label>\r\n                  <Form.Control type=\"email\" name='email' value={inputdata.email} onChange={setInputValue} placeholder='Enter Email' />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3 col-lg-6\" controlId=\"formBasicEmail\">\r\n                  <Form.Label>Mobile</Form.Label>\r\n                  <Form.Control type=\"text\" name='mobile' value={inputdata.mobile} onChange={setInputValue} placeholder='Enter Mobile' />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3 col-lg-6\" controlId=\"formBasicEmail\">\r\n                  <Form.Label>Select Your Gender</Form.Label>\r\n                  <Form.Check\r\n                    type={\"radio\"}\r\n                    label={`Male`}\r\n                    name=\"gender\"\r\n                    value={\"Male\"}\r\n                    checked={inputdata.gender === \"Male\" ? true:false}\r\n                    onChange={setInputValue}\r\n                  />\r\n                  <Form.Check\r\n                    type={\"radio\"}\r\n                    label={`Female`}\r\n                    name=\"gender\"\r\n                    value={\"Female\"}\r\n                    checked={inputdata.gender === \"Female\" ? true:false}\r\n                    onChange={setInputValue}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3 col-lg-6\" controlId=\"formBasicEmail\">\r\n                  <Form.Label>Select Your Status</Form.Label>\r\n                  <Select options={options} defaultValue={status} onChange={setStatusValue} />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3 col-lg-6\" controlId=\"formBasicEmail\">\r\n                  <Form.Label>Select Your Profile</Form.Label>\r\n                  <Form.Control type=\"file\" name='user_profile' onChange={setProfile} placeholder='Select Your Profile' />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3 col-lg-6\" controlId=\"formBasicEmail\">\r\n                  <Form.Label>Enter Your Location</Form.Label>\r\n                  <Form.Control type=\"text\" name='location' value={inputdata.location} onChange={setInputValue} placeholder='Enter Your Location' />\r\n                </Form.Group>\r\n                <Button variant=\"primary\" type=\"submit\" onClick={submitUserData}>\r\n                  Submit\r\n                </Button>\r\n              </Row>\r\n\r\n            </Form>\r\n          </Card>\r\n          <ToastContainer position=\"top-center\" />\r\n        </div>\r\n      }\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Edit\r\n\r\n\r\n","D:\\reactjs\\Mern_crud\\client\\src\\pages\\Profile\\Profile.js",["85"],[],"/*import React, { useEffect, useState } from 'react'\r\nimport \"./profile.css\"\r\nimport Card from \"react-bootstrap/Card\"\r\nimport Spiner from \"../../components/Spiner/Spiner\"\r\nimport {singleUsergetfunc} from \"../../services/Apis\"\r\n\r\nimport Row from \"react-bootstrap/Row\"\r\nimport { useParams } from 'react-router-dom'\r\nconst Profile = () => {\r\n    //for spineer\r\n    const [showspin, setShowSpin] = useState(true);\r\n    //useParams help to directly get id \r\n    const {id} = useParams();\r\n    console.log(id);\r\n    const userProfileGet = async () => {\r\n         const response=await singleUsergetfunc(id);\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        userProfileGet();\r\n        setTimeout(() => {\r\n          setShowSpin(false)\r\n        }, 1200)\r\n      }, [id])\r\n\r\n    return (\r\n        <>\r\n            {\r\n                showspin ? <Spiner /> :\r\n                    <div className=\"container\">\r\n                        <Card className='card-profile shadow col-lg-6 mx-auto mt-5'>\r\n                            <Card.Body>\r\n                                <Row>\r\n                                    <div className='col'>\r\n                                        <div className=\"card-profile-status d-flex justify-content-center\">\r\n\r\n\r\n                                            <img src=\"/parth_photo.jpg\" alt=\"img\"></img>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </Row>\r\n                                <div className='text-center'>\r\n                                    <h3>Parth kakadiya</h3>\r\n                                    <h4><i className=\"fa-solid fa-envelope email\"></i>&nbsp; <span>:- Parthhkakadiya@gmail.com</span></h4>\r\n                                    <h4><i className=\"fa-solid fa-mobile\"></i>&nbsp; <span>:- 9081142615</span></h4>\r\n                                    <h4><i className=\"fa-solid fa-person\"></i>&nbsp; <span>:- Male</span></h4>\r\n                                    <h4><i className=\"fa-solid fa-location-pin location\"></i>&nbsp; <span>:- Wismar </span></h4>\r\n                                    <h4> Status &nbsp; <span>:- Active</span></h4>\r\n                                    <h5><i className=\"fa-solid fa-calendar-days calendar\"></i>&nbsp;Date Created&nbsp;:- <span> </span> </h5>\r\n                                    <h5> <i className=\"fa-solid fa-calendar-days calendar\"></i>&nbsp;Date Updated&nbsp;:- <span></span> </h5>\r\n\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </div>\r\n            }\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n*/\r\nimport React, { useState, useEffect } from 'react'\r\nimport Card from \"react-bootstrap/Card\"\r\nimport Row from 'react-bootstrap/esm/Row'\r\nimport { useParams } from 'react-router-dom'\r\nimport Spiner from \"../../components/Spiner/Spiner\"\r\nimport { singleUsergetfunc } from \"../../services/Apis\"\r\nimport { BASE_URL } from '../../services/helper'\r\nimport moment from \"moment\"\r\nimport \"./profile.css\"\r\n\r\nconst Profile = () => {\r\n\r\n    const [userprofile, setUserProfile] = useState({});\r\n    const [showspin, setShowSpin] = useState(true);\r\n    //for directly get id \r\n    const { id } = useParams();\r\n    console.log(id);\r\n\r\n    const userProfileGet = async () => {\r\n        const response = await singleUsergetfunc(id);\r\n        console.log(response);\r\n\r\n        if (response.status === 200) {\r\n            //its like store data in setUserProfile\r\n            setUserProfile(response.data)\r\n        } else {\r\n            console.log(\"error\");\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        userProfileGet();\r\n        setTimeout(() => {\r\n            setShowSpin(false)\r\n        }, 1200)\r\n    }, [id])\r\n    return (\r\n        <>\r\n            {\r\n                showspin ? <Spiner /> : <div className=\"container\">\r\n                    <Card className='card-profile shadow col-lg-6 mx-auto mt-5'>\r\n                        <Card.Body>\r\n                            <Row>\r\n                                <div className=\"col\">\r\n                                    <div className=\"card-profile-status d-flex justify-content-center\">\r\n\r\n                                        <img src={`${BASE_URL}/uploads/${userprofile.user_profile}`} alt=\"\" />\r\n                                    </div>\r\n                                </div>\r\n                            </Row>\r\n                            <div className='text-center'>\r\n                                <h3>{userprofile.fname + userprofile.lname}</h3>\r\n                                <h4><i class=\"fa-solid fa-envelope email\"></i>&nbsp;:- <span>{userprofile.email}</span> </h4>\r\n                                <h5><i class=\"fa-solid fa-mobile\"></i>&nbsp;:- <span>{userprofile.mobile}</span> </h5>\r\n                                <h4><i class=\"fa-solid fa-person\"></i>&nbsp;:- <span>{userprofile.gender}</span> </h4>\r\n                                <h4><i class=\"fa-solid fa-location-pin location\"></i>&nbsp;:- <span>{userprofile.location}</span> </h4>\r\n                                <h4>Status&nbsp;:- <span>{userprofile.status}</span> </h4>\r\n                                <h5><i class=\"fa-solid fa-calendar-days calendar\"></i>&nbsp;Date Created&nbsp;:- <span>{moment(userprofile.datecreated).format(\"DD-MM-YYYY\")}</span> </h5>\r\n                                <h5> <i class=\"fa-solid fa-calendar-days calendar\"></i>&nbsp;Date Updated&nbsp;:- <span>{userprofile.dateUpdated}</span> </h5>\r\n                            </div>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n            }\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Profile","D:\\reactjs\\Mern_crud\\client\\src\\pages\\Register\\Register.js",[],[],"D:\\reactjs\\Mern_crud\\client\\src\\components\\Headers\\Headers.js",[],[],[],"D:\\reactjs\\Mern_crud\\client\\src\\components\\Tables\\Tables.js",[],[],"D:\\reactjs\\Mern_crud\\client\\src\\components\\Spiner\\Spiner.js",[],[],"D:\\reactjs\\Mern_crud\\client\\src\\services\\Apis.js",[],[],"D:\\reactjs\\Mern_crud\\client\\src\\services\\ApiCall.js",[],[],"D:\\reactjs\\Mern_crud\\client\\src\\services\\helper.js",[],[],"D:\\reactjs\\Mern_crud\\client\\src\\components\\context\\ContextProvider.js",[],[],"D:\\reactjs\\Mern_crud\\client\\src\\components\\Pagination\\Paginations.js",[],[],{"ruleId":"86","severity":1,"message":"87","line":18,"column":8,"nodeType":"88","messageId":"89","endLine":18,"endColumn":19},{"ruleId":"90","severity":1,"message":"91","line":106,"column":8,"nodeType":"92","endLine":106,"endColumn":38,"suggestions":"93"},{"ruleId":"86","severity":1,"message":"94","line":254,"column":10,"nodeType":"88","messageId":"89","endLine":254,"endColumn":16},{"ruleId":"90","severity":1,"message":"95","line":351,"column":5,"nodeType":"92","endLine":351,"endColumn":9,"suggestions":"96"},{"ruleId":"90","severity":1,"message":"95","line":100,"column":8,"nodeType":"92","endLine":100,"endColumn":12,"suggestions":"97"},"no-unused-vars","'Paginations' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userGet'. Either include it or remove the dependency array.","ArrayExpression",["98"],"'update' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userProfileGet'. Either include it or remove the dependency array.",["99"],["100"],{"desc":"101","fix":"102"},{"desc":"103","fix":"104"},{"desc":"103","fix":"105"},"Update the dependencies array to be: [search, gender, status, sort, userGet]",{"range":"106","text":"107"},"Update the dependencies array to be: [id, userProfileGet]",{"range":"108","text":"109"},{"range":"110","text":"109"},[3478,3508],"[search, gender, status, sort, userGet]",[11311,11315],"[id, userProfileGet]",[3751,3755]]