{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactjs\\\\Auth\\\\client\\\\src\\\\components\\\\ForgotPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForgotPassword = () => {\n  _s();\n  //use useParams to get id and token \n  //and for valid user that the link open in particular email or not\n  const {\n    id,\n    token\n  } = useParams();\n  const history = useNavigate();\n  const [password, setPassword] = useState(\"\");\n  const [mesaage, setMesaage] = useState(\"\");\n  const userValid = async () => {\n    //this api for verify user\n    const res = await fetch(`/forgotpassword/${id}/${token}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await res.json();\n    if (data.status === 201) {\n      console.log(\"user Valid\");\n    } else {\n      history(\"*\");\n    }\n  };\n  const setval = e => {\n    setPassword(e.target.value);\n  };\n  const sendpassord = async e => {\n    e.preventDefault();\n    const res = await fetch(`/${id}/${token}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        password\n      })\n    });\n    const data = await res.json();\n    if (data.status === 201) {\n      setPassword(\"\");\n      setMesaage(true);\n    } else {\n      toast.error(\"!Token Expired Generate New Link\");\n    }\n  };\n  useEffect(() => {\n    userValid();\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form_data\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form_heading\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Enter Your New Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this), mesaage ? /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: \"green\",\n            fontWeight: \"bold\"\n          },\n          children: \"pasword reset link send Succsfully in Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 20\n        }, this) : \"\", /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form_input\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"New Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              value: password,\n              onChange: setval,\n              name: \"password\",\n              id: \"password\",\n              placeholder: \"Enter Your New Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            onClick: sendpassord,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_s(ForgotPassword, \"VOAva1vwOGj9pomA7K5rUeZb064=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ForgotPassword;\nexport default ForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useParams","ToastContainer","toast","ForgotPassword","id","token","history","password","setPassword","mesaage","setMesaage","userValid","res","fetch","method","headers","data","json","status","console","log","setval","e","target","value","sendpassord","preventDefault","body","JSON","stringify","error","color","fontWeight"],"sources":["D:/reactjs/Auth/client/src/components/ForgotPassword.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { ToastContainer,toast } from 'react-toastify';\r\n\r\n\r\nconst ForgotPassword = () => {\r\n\r\n  //use useParams to get id and token \r\n  //and for valid user that the link open in particular email or not\r\n  const {id,token}=useParams();\r\n  const history=useNavigate();\r\n\r\n  const [password,setPassword]=useState(\"\");\r\n  const [mesaage, setMesaage] = useState(\"\");\r\n\r\n  const userValid=async()=>{\r\n    //this api for verify user\r\n    const res=await fetch(`/forgotpassword/${id}/${token}`,{\r\n      method:\"GET\",\r\n      headers:{\r\n        \"Content-Type\":\"application/json\"\r\n      }\r\n   \r\n    });\r\n    const data=await res.json();\r\n    if(data.status ===201)\r\n    {\r\n      console.log(\"user Valid\");\r\n    }else\r\n    {\r\n      history(\"*\");\r\n    }\r\n  }\r\n  const setval=(e)=>{\r\nsetPassword(e.target.value);\r\n  }\r\n  const sendpassord=async(e)=>{\r\n    e.preventDefault();\r\n    const res=await fetch(`/${id}/${token}`,{\r\n      method:\"POST\",\r\n      headers:{\r\n        \"Content-Type\":\"application/json\"\r\n      },\r\n      body:JSON.stringify({password})\r\n    });\r\n    const data=await res.json();\r\n    if(data.status ===201)\r\n    {\r\n        setPassword(\"\");\r\n        setMesaage(true);\r\n    }else\r\n    {\r\n      toast.error(\"!Token Expired Generate New Link\");\r\n    }\r\n\r\n  }\r\n  useEffect(()=>{\r\n    userValid();\r\n  })\r\n\r\n  return (\r\n    <>\r\n    <section>\r\n    <div className=\"form_data\">\r\n        <div className=\"form_heading\">\r\n            <h1>Enter Your New Password</h1>\r\n        </div>\r\n\r\n        {mesaage ? <p style={{ color: \"green\", fontWeight: \"bold\" }}>pasword reset link send Succsfully in Your Email</p> : \"\"}\r\n                    <form>\r\n            <div className=\"form_input\">\r\n                <label htmlFor=\"email\">New Password</label>\r\n                <input type=\"password\" value={password} onChange={setval} name=\"password\" id=\"password\" placeholder='Enter Your New Password' />\r\n            </div>\r\n\r\n            <button className='btn' onClick={sendpassord}>Send</button>\r\n        </form>\r\n        <ToastContainer />\r\n    </div>\r\n</section>\r\n</>\r\n  )\r\n}\r\n\r\nexport default ForgotPassword"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}