{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactjs\\\\Auth\\\\client\\\\src\\\\components\\\\PasswordReset.js\",\n  _s = $RefreshSig$();\n/*import React, { useState } from 'react'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\n\r\nconst PasswordReset = () => {\r\n    const[email,setEmail]=useState(\"\");\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n\r\n    const setVel=(e)=>{\r\n        //for user get\r\n        setEmail(e.targer.value);\r\n\r\n    }\r\n    const sendLink=async(e)=>{\r\n        e.preventDefault();\r\n\r\n        const res = await fetch(\"/sendpasswordlink\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({ email })\r\n        });   \r\n        const data = await res.json();\r\n\r\n            if (data.status === 201) {\r\n                setEmail(\"\");\r\n                setMessage(true)\r\n            }  \r\n    }\r\n  return (\r\n    <>\r\n     <section>\r\n                <div className=\"form_data\">\r\n                    <div className=\"form_heading\">\r\n                        <h1>Enter Your Mail</h1>\r\n                       \r\n                    </div>\r\n                    {message ? <p style={{ color: \"green\", fontWeight: \"bold\" }}>pasword reset link send Succsfully in Your Email</p> : \"\"}\r\n                    <form>\r\n\r\n                        <div className=\"form_input\">\r\n                            <lable htmlFor=\"email\">Email</lable>\r\n                            <input type=\"email\" name=\"email\" value={email} onChange={setVel} id=\"email\" placeholder='Enter Your Email Address' />\r\n                        </div>\r\n                        \r\n                        <button className='btn' onClick={sendLink}>Send</button>\r\n                        \r\n                    </form>\r\n                </div>\r\n            </section>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PasswordReset\r\n*/\nimport React, { useState } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PasswordReset = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const setVal = e => {\n    setEmail(e.target.value);\n  };\n  const sendLink = async e => {\n    e.preventDefault();\n    if (email === \"\") {\n      toast.error(\"email is required!\", {\n        position: \"top-center\"\n      });\n    } else if (!email.includes(\"@\")) {\n      toast.warning(\"includes @ in your email!\", {\n        position: \"top-center\"\n      });\n    } else {\n      const res = await fetch(\"/sendpasswordlink\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email\n        })\n      });\n      const data = await res.json();\n      if (data.status === 201) {\n        setEmail(\"\");\n        setMessage(true);\n      } else {\n        toast.error(\"Invalid User\", {\n          position: \"top-center\"\n        });\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form_data\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form_heading\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Enter Your Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), message ? /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: \"green\",\n            fontWeight: \"bold\"\n          },\n          children: \"pasword reset link send Succsfully in Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 32\n        }, this) : \"\", /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form_input\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              value: email,\n              onChange: setVal,\n              name: \"email\",\n              id: \"email\",\n              placeholder: \"Enter Your Email Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            onClick: sendLink,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(PasswordReset, \"tgSpMP9vfF6GNBbNf9NcNEW5Oz0=\");\n_c = PasswordReset;\nexport default PasswordReset;\nvar _c;\n$RefreshReg$(_c, \"PasswordReset\");","map":{"version":3,"names":["React","useState","ToastContainer","toast","PasswordReset","email","setEmail","message","setMessage","setVal","e","target","value","sendLink","preventDefault","error","position","includes","warning","res","fetch","method","headers","body","JSON","stringify","data","json","status","color","fontWeight"],"sources":["D:/reactjs/Auth/client/src/components/PasswordReset.js"],"sourcesContent":["/*import React, { useState } from 'react'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\n\r\nconst PasswordReset = () => {\r\n    const[email,setEmail]=useState(\"\");\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n\r\n    const setVel=(e)=>{\r\n        //for user get\r\n        setEmail(e.targer.value);\r\n\r\n    }\r\n    const sendLink=async(e)=>{\r\n        e.preventDefault();\r\n\r\n        const res = await fetch(\"/sendpasswordlink\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({ email })\r\n        });   \r\n        const data = await res.json();\r\n\r\n            if (data.status === 201) {\r\n                setEmail(\"\");\r\n                setMessage(true)\r\n            }  \r\n    }\r\n  return (\r\n    <>\r\n     <section>\r\n                <div className=\"form_data\">\r\n                    <div className=\"form_heading\">\r\n                        <h1>Enter Your Mail</h1>\r\n                       \r\n                    </div>\r\n                    {message ? <p style={{ color: \"green\", fontWeight: \"bold\" }}>pasword reset link send Succsfully in Your Email</p> : \"\"}\r\n                    <form>\r\n\r\n                        <div className=\"form_input\">\r\n                            <lable htmlFor=\"email\">Email</lable>\r\n                            <input type=\"email\" name=\"email\" value={email} onChange={setVel} id=\"email\" placeholder='Enter Your Email Address' />\r\n                        </div>\r\n                        \r\n                        <button className='btn' onClick={sendLink}>Send</button>\r\n                        \r\n                    </form>\r\n                </div>\r\n            </section>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PasswordReset\r\n*/\r\nimport React, { useState } from 'react'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nconst PasswordReset = () => {\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    const setVal = (e) => {\r\n        setEmail(e.target.value)\r\n    }\r\n\r\n    const sendLink = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (email === \"\") {\r\n            toast.error(\"email is required!\", {\r\n                position: \"top-center\"\r\n            });\r\n        } else if (!email.includes(\"@\")) {\r\n            toast.warning(\"includes @ in your email!\", {\r\n                position: \"top-center\"\r\n            });\r\n        } else {\r\n            const res = await fetch(\"/sendpasswordlink\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({ email })\r\n            });\r\n\r\n            const data = await res.json();\r\n\r\n            if (data.status === 201) {\r\n                setEmail(\"\");\r\n                setMessage(true)\r\n            } else {\r\n                toast.error(\"Invalid User\",{\r\n                    position: \"top-center\"\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section>\r\n                <div className=\"form_data\">\r\n                    <div className=\"form_heading\">\r\n                        <h1>Enter Your Email</h1>\r\n                    </div>\r\n\r\n                    {message ? <p style={{ color: \"green\", fontWeight: \"bold\" }}>pasword reset link send Succsfully in Your Email</p> : \"\"}\r\n                    <form>\r\n                        <div className=\"form_input\">\r\n                            <label htmlFor=\"email\">Email</label>\r\n                            <input type=\"email\" value={email} onChange={setVal} name=\"email\" id=\"email\" placeholder='Enter Your Email Address' />\r\n                        </div>\r\n\r\n                        <button className='btn' onClick={sendLink}>Send</button>\r\n                    </form>\r\n                    <ToastContainer />\r\n                </div>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PasswordReset"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}