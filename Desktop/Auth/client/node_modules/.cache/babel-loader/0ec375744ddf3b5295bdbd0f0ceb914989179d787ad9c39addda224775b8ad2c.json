{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactjs\\\\Auth\\\\client\\\\src\\\\components\\\\PasswordReset.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PasswordReset = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const setVel = e => {\n    //for user get\n    //  setEmail(e.targer.value)\n    setEmail(e.target.value);\n  };\n  const sendLink = async e => {\n    e.preventDefault();\n    const res = await fetch(\"/sendpasswordlink\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email\n      })\n    });\n    const data = await res.json();\n    if (data.status === 201) {\n      setEmail(\"\");\n      setMessage(true);\n    } else {\n      toast.error(\"Invalid User\", {\n        position: \"top-center\"\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form_data\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form_heading\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Enter Your Mail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), message ? /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: \"green\",\n            fontWeight: \"bold\"\n          },\n          children: \"pasword reset link send Succsfully in Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 32\n        }, this) : \"\", /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form_input\",\n            children: [/*#__PURE__*/_jsxDEV(\"lable\", {\n              htmlFor: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              name: \"email\",\n              value: email,\n              onChange: setVel,\n              id: \"email\",\n              placeholder: \"Enter Your Email Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            onClick: sendLink,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 6\n    }, this)\n  }, void 0, false);\n};\n_s(PasswordReset, \"i3DB4Atce5QmhMHDgXU1+MbKvW0=\");\n_c = PasswordReset;\nexport default PasswordReset;\nvar _c;\n$RefreshReg$(_c, \"PasswordReset\");","map":{"version":3,"names":["React","useState","ToastContainer","toast","PasswordReset","email","setEmail","message","setMessage","setVel","e","target","value","sendLink","preventDefault","res","fetch","method","headers","body","JSON","stringify","data","json","status","error","position","color","fontWeight"],"sources":["D:/reactjs/Auth/client/src/components/PasswordReset.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\n\r\nconst PasswordReset = () => {\r\n    const[email,setEmail]=useState(\"\");\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n\r\n    const setVel=(e)=>{\r\n        //for user get\r\n      //  setEmail(e.targer.value)\r\n        setEmail(e.target.value)\r\n\r\n    }\r\n    const sendLink=async(e)=>{\r\n        e.preventDefault();\r\n\r\n        const res = await fetch(\"/sendpasswordlink\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({ email })\r\n        });   \r\n        const data = await res.json();\r\n\r\n            if (data.status === 201) {\r\n                setEmail(\"\");\r\n                setMessage(true)\r\n            }else {\r\n                toast.error(\"Invalid User\",{\r\n                    position: \"top-center\"\r\n                })\r\n            }\r\n    }\r\n  return (\r\n    <>\r\n     <section>\r\n                <div className=\"form_data\">\r\n                    <div className=\"form_heading\">\r\n                        <h1>Enter Your Mail</h1>\r\n                       \r\n                    </div>\r\n                    {message ? <p style={{ color: \"green\", fontWeight: \"bold\" }}>pasword reset link send Succsfully in Your Email</p> : \"\"}\r\n                    <form>\r\n\r\n                        <div className=\"form_input\">\r\n                            <lable htmlFor=\"email\">Email</lable>\r\n                            <input type=\"email\" name=\"email\" value={email} onChange={setVel} id=\"email\" placeholder='Enter Your Email Address' />\r\n                        </div>\r\n                        \r\n                        <button className='btn' onClick={sendLink}>Send</button>\r\n                        \r\n                    </form>\r\n                    <ToastContainer />\r\n\r\n                </div>\r\n            </section>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PasswordReset\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,cAAc,EAAEC,KAAK,QAAQ,gBAAgB;AAAC;AAAA;AAGvD,MAAMC,aAAa,GAAG,MAAM;EAAA;EACxB,MAAK,CAACC,KAAK,EAACC,QAAQ,CAAC,GAACL,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAG1C,MAAMQ,MAAM,GAAEC,CAAC,IAAG;IACd;IACF;IACEJ,QAAQ,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAE5B,CAAC;EACD,MAAMC,QAAQ,GAAC,MAAMH,CAAC,IAAG;IACrBA,CAAC,CAACI,cAAc,EAAE;IAElB,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,mBAAmB,EAAE;MACzCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEhB;MAAM,CAAC;IAClC,CAAC,CAAC;IACF,MAAMiB,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAI,EAAE;IAEzB,IAAID,IAAI,CAACE,MAAM,KAAK,GAAG,EAAE;MACrBlB,QAAQ,CAAC,EAAE,CAAC;MACZE,UAAU,CAAC,IAAI,CAAC;IACpB,CAAC,MAAK;MACFL,KAAK,CAACsB,KAAK,CAAC,cAAc,EAAC;QACvBC,QAAQ,EAAE;MACd,CAAC,CAAC;IACN;EACR,CAAC;EACH,oBACE;IAAA,uBACC;MAAA,uBACW;QAAK,SAAS,EAAC,WAAW;QAAA,wBACtB;UAAK,SAAS,EAAC,cAAc;UAAA,uBACzB;YAAA,UAAI;UAAe;YAAA;YAAA;YAAA;UAAA;QAAK;UAAA;UAAA;UAAA;QAAA,QAEtB,EACLnB,OAAO,gBAAG;UAAG,KAAK,EAAE;YAAEoB,KAAK,EAAE,OAAO;YAAEC,UAAU,EAAE;UAAO,CAAE;UAAA,UAAC;QAAgD;UAAA;UAAA;UAAA;QAAA,QAAI,GAAG,EAAE,eACtH;UAAA,wBAEI;YAAK,SAAS,EAAC,YAAY;YAAA,wBACvB;cAAO,OAAO,EAAC,OAAO;cAAA,UAAC;YAAK;cAAA;cAAA;cAAA;YAAA,QAAQ,eACpC;cAAO,IAAI,EAAC,OAAO;cAAC,IAAI,EAAC,OAAO;cAAC,KAAK,EAAEvB,KAAM;cAAC,QAAQ,EAAEI,MAAO;cAAC,EAAE,EAAC,OAAO;cAAC,WAAW,EAAC;YAA0B;cAAA;cAAA;cAAA;YAAA,QAAG;UAAA;YAAA;YAAA;YAAA;UAAA,QACnH,eAEN;YAAQ,SAAS,EAAC,KAAK;YAAC,OAAO,EAAEI,QAAS;YAAA,UAAC;UAAI;YAAA;YAAA;YAAA;UAAA,QAAS;QAAA;UAAA;UAAA;UAAA;QAAA,QAErD,eACP,QAAC,cAAc;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA;IAEhB;MAAA;MAAA;MAAA;IAAA;EACA,iBACf;AAEP,CAAC;AAAA,GAzDKT,aAAa;AAAA,KAAbA,aAAa;AA2DnB,eAAeA,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}